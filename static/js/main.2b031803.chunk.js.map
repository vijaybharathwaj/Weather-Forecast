{"version":3,"sources":["components/api.js","components/Dashboard/components/dashboard/City.js","components/Dashboard/components/dashboard/Cloud.js","components/Dashboard/components/dashboard/TempatureCard.js","components/Dashboard/components/dashboard/WeatherCard.js","components/Dashboard/components/dashboard/WeeklyData.js","components/Dashboard/components/dashboard/Wind.js","components/Dashboard/pages/Dashboard.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","useStyles","makeStyles","root","background","borderRadius","border","color","height","padding","label","textTransform","Budget","props","classes","Card","sx","CardContent","Grid","container","spacing","justifyContent","item","Typography","gutterBottom","variant","city","name","toUpperCase","country","console","log","Avatar","backgroundColor","red","width","LocationCity","LatestProducts","CardHeader","title","Divider","List","list","map","key","dt_txt","substring","ListItem","ListItemIcon","src","weather","icon","alt","description","style","ListItemText","primary","Box","display","p","TotalCustomers","Math","round","main","temp","green","size","TasksProgress","orange","pt","LatestOrders","minWidth","Table","TableHead","TableRow","TableCell","TableBody","hover","wind","speed","TotalProfit","indigo","Dashboard","search","e","state","setState","this","className","content","value","onChange","newValue","onKeyPress","event","marginTop","minHeight","py","Container","maxWidth","lg","sm","xl","xs","City","WeatherCard","Wind","md","Cloud","backgroundImage","process","Component","withStyles","theme","marginLeft","button","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2b031803.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://cors-anywhere.herokuapp.com/https://api.openweathermap.org/data/2.5/forecast';\nconst API_KEY = '453bb7ec5d9e1239f27a72f77b2124c6';\n\nexport const fetchWeather = async (query) => {\n    const { data } = await axios.get(URL, {\n        params: {\n            q: query,\n            units: 'metric',\n            APPID: API_KEY,\n        }\n    });\n\n    return data;\n}","import {\n  Avatar,\n  // Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\n// import ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\nimport { red } from '@material-ui/core/colors';\nimport { LocationCity } from '@material-ui/icons';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles({\n  root: {\n    background:'linear-gradient(to right top, #c4e5ea, #bfdade, #b9cfd3, #b4c5c7, #aebabc)',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: '100%',\n    padding: '0 30px',\n    // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n});\n\nconst Budget = (props) => {\n\n  const classes = useStyles();\n  return(\n    \n\n  <Card\n    sx={{ height: '100%' }}\n    {...props}\n    classes={{\n      root: classes.root, \n      label: classes.label, \n    }}\n  >\n   \n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            City\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h5\"\n          >\n            { props.city.city.name?\n          props.city.city.name.toUpperCase() +\n         \"(\"+ props.city.city.country+\")\" : console.log()}\n           \n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: red[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <LocationCity />\n          </Avatar>\n        </Grid>\n      </Grid>\n      \n    </CardContent>\n  </Card>\n  )\n    };\n\nexport default Budget;\n","\nimport {\n  Box,\n  // Button,\n  Card,\n  CardHeader,\n  Divider,\n\n  List,\n  ListItem,\n\n  ListItemIcon,\n  // ListItemAvatar,\n  ListItemText,\n} from \"@material-ui/core\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n\nconst LatestProducts = (props) => {\n  const useStyles = makeStyles({\n    root: {\n      background:'#959FA0',\n      borderRadius: 3,\n      border: 0,\n      color: 'white',\n      height: '100%',\n      padding: '0 30px',\n      // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n  });\n  const classes = useStyles();\n \n  return (\n  <Card {...props}classes={{\n    root: classes.root, \n    label: classes.label, \n  }}>\n    <CardHeader title=\"Weather Situation\" />\n    <Divider />\n    <List>\n      {props.data.list.map((key) => (\n       \n          key.dt_txt.substring(11) === \"12:00:00\" ? (\n            <>\n            <ListItem key={key}>\n              <ListItemIcon>\n                <img\n                  src={`https://openweathermap.org/img/wn/${key.weather[0].icon}@2x.png`}\n                  alt={key.weather[0].description}\n                  style={{\n                    height: 48,\n                    width: 48,\n                  }}\n                />\n              </ListItemIcon>\n              <ListItemText primary={key.weather[0].description + \"(\"+ key.dt_txt.substring(0,10) + \")\"} />\n              </ListItem>\n            </>\n          ) : (\n            console.log()\n          )\n       \n      ))}\n    </List>\n    <Divider />\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        p: 2,\n      }}\n    ></Box>\n  </Card>\n)};\n\nexport default LatestProducts;\n","import { Avatar, Card, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport { green } from \"@material-ui/core/colors\";\n\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { WiCelsius } from \"weather-icons-react\";\n\n\nconst TotalCustomers = (props) => {\n \n  const useStyles = makeStyles({\n    root: {\n      background:'linear-gradient(to right top, #c4e5ea, #bfdade, #b9cfd3, #b4c5c7, #aebabc)',\n      borderRadius: 3,\n      border: 0,\n      color: 'white',\n      height: '100%',\n      padding: '0 30px',\n      // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n  });\n  \n  const classes = useStyles();\n \n  return (\n    <Card {...props}\n    classes={{\n      root: classes.root, \n      label: classes.label, \n    }}>\n      <CardContent>\n        <Grid container spacing={3} sx={{ justifyContent: \"space-between\" }}>\n          <Grid item>\n            <Typography color=\"textSecondary\" gutterBottom variant=\"h6\">\n              Tempature\n            </Typography>\n            <Typography color=\"textPrimary\" variant=\"h5\">\n              {/* {props.da} */}\n              {Math.round(props.data.list[0].main.temp)}°c\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Avatar\n              sx={{\n                backgroundColor: green[600],\n                height: 56,\n                width: 56,\n              }}\n            >\n              <WiCelsius  color=\"#3f51b5\" size={40}/>\n            </Avatar>\n          </Grid>\n        </Grid>\n        {/* <Box\n        sx={{\n          alignItems: 'center',\n          display: 'flex',\n          pt: 2\n        }}\n      >\n        <ArrowUpwardIcon sx={{ color: green[900] }} />\n        <Typography\n          variant=\"body2\"\n          sx={{\n            color: green[900],\n            mr: 1\n          }}\n        >\n          16%\n        </Typography>\n        <Typography\n          color=\"textSecondary\"\n          variant=\"caption\"\n        >\n          Since last month\n        </Typography>\n      </Box> */}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default TotalCustomers;\n","import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  // LinearProgress,\n  Typography\n} from '@material-ui/core';\nimport { orange } from '@material-ui/core/colors';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { WiCloudy } from \"weather-icons-react\";\n\nconst TasksProgress = (props) => {\n  const useStyles = makeStyles({\n    root: {\n      background:'linear-gradient(to right top, #c4e5ea, #bfdade, #b9cfd3, #b4c5c7, #aebabc)',\n      borderRadius: 3,\n      border: 0,\n      color: 'white',\n      height: '100%',\n      padding: '0 30px',\n      // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n  });\n  const classes = useStyles();\n \n  return (\n  <Card\n    sx={{ height: '100%' }}\n    {...props}\n    classes={{\n      root: classes.root, \n      label: classes.label, \n    }}\n  >\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            Weather\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            \n          >\n            {props.data.list[0].weather[0].description.toUpperCase()}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: orange[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <WiCloudy color='#3f51b5' />\n          </Avatar>\n        </Grid>\n      </Grid>\n      <Box sx={{ pt: 3 }}>\n        {/* <LinearProgress\n          value={75.5}\n          variant=\"determinate\"\n        /> */}\n      </Box>\n    </CardContent>\n  </Card>)\n};\n\nexport default TasksProgress;\n","import {\n  Box,\n  Card,\n  CardHeader,\n\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow\n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\n\nconst LatestOrders = (props) => {\n  const useStyles = makeStyles({\n    root: {\n      background:'#959FA0',\n      borderRadius: 3,\n      border: 0,\n      color: 'white',\n      height: '100%',\n      padding: '0 30px',\n      // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n  });\n  const classes = useStyles();\n return(\n  <Card {...props}\n  {...props}classes={{\n    root: classes.root, \n    label: classes.label, \n  }}>\n    <CardHeader title=\"Predicted Weather\" />\n    <Divider />\n    <PerfectScrollbar>\n      <Box sx={{ minWidth: 800 }}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>DATE</TableCell>\n              <TableCell>TEMPERATURE</TableCell>\n              <TableCell>WEATHER</TableCell>\n              <TableCell>WIND SPEED</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.data.list.map((key) => (\n              <TableRow hover key={key}>\n                {key.dt_txt.substring(11) === \"00:00:00\" ? (\n                  <>\n                    <TableCell>{key.dt_txt.substring(0,10)}</TableCell>\n                    <TableCell>\n                     {Math.round(key.main.temp) + \"°c\"}\n                      \n                    </TableCell>\n                    <TableCell>\n                      {/* {moment(order.createdAt).format('DD/MM/YYYY')} */}\n                      {key.weather[0].description.toUpperCase()}\n                    </TableCell>\n                    <TableCell>\n                      {key.wind.speed}\n                    </TableCell>\n                  </>\n                ) : (\n                  console.log()\n                )}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </Box>\n    </PerfectScrollbar>\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        p: 2,\n      }}\n    ></Box>\n  </Card>\n )};\n\nexport default LatestOrders;\n","import {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport { indigo } from '@material-ui/core/colors';\nimport { WiDayWindy } from \"weather-icons-react\";\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst TotalProfit = (props) => {\n  const useStyles = makeStyles({\n    root: {\n      background:'linear-gradient(to right top, #c4e5ea, #bfdade, #b9cfd3, #b4c5c7, #aebabc)',\n      borderRadius: 3,\n      border: 0,\n      color: 'white',\n      height: '100%',\n      padding: '0 30px',\n      // boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    },\n    label: {\n      textTransform: 'capitalize',\n    },\n  });\n  const classes = useStyles();\n \n  return (\n  <Card {...props}\n  classes={{\n    root: classes.root, \n    label: classes.label, \n  }}>\n    <CardContent>\n      <Grid\n        container\n        spacing={3}\n        sx={{ justifyContent: 'space-between' }}\n      >\n        <Grid item>\n          <Typography\n            color=\"textSecondary\"\n            gutterBottom\n            variant=\"h6\"\n          >\n            Wind Speed\n          </Typography>\n          <Typography\n            color=\"textPrimary\"\n            variant=\"h5\"\n          >\n           {props.data.list[0].wind.speed}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar\n            sx={{\n              backgroundColor: indigo[600],\n              height: 56,\n              width: 56\n            }}\n          >\n            <WiDayWindy color=\"#3f51b5\" />\n          </Avatar>\n        </Grid>\n      </Grid>\n    </CardContent>\n  </Card>\n)};\n\nexport default TotalProfit;\n","import { Box, Container, Grid } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport SearchBar from \"material-ui-search-bar\";\nimport React, { Component } from \"react\";\nimport { fetchWeather } from \"../../api\";\nimport CityCard from \"../components/dashboard/City\";\nimport CloudCondition from \"../components/dashboard/Cloud\";\nimport TemperatureCard from \"../components/dashboard/TempatureCard\";\nimport WeatherCard from \"../components/dashboard/WeatherCard\";\nimport NextDaysData from \"../components/dashboard/WeeklyData\";\nimport WindCard from \"../components/dashboard/Wind\";\n\n\nconst useStyles = (theme) => ({\n  content: {\n    // flexGrow: 1,\n    padding: theme.spacing(10),\n    marginLeft: theme.spacing(0),\n    \"@media (max-width: 780px)\": {\n      padding: theme.spacing(1),\n      marginLeft: theme.spacing(0),\n      marginTop: theme.spacing(0),\n    },\n  },\n  button: {\n    marginTop: theme.spacing(4),\n  },\n});\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      data: \"\",\n    };\n  }\n\n  search = async (e) => {\n    const data = await fetchWeather(this.state.city);\n    console.log(data);\n    this.setState({ data });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <>    \n        <div className={classes.content}>\n          <SearchBar\n            value={this.state.value}\n            onChange={(newValue) => this.setState({ city: newValue })}\n            onKeyPress={(event) => {\n              if (event.key === \"Enter\") {\n                this.search();\n              }\n            }}\n          />\n          {this.state.data?\n\n          <Box\n            style={{ marginTop: \"10px\" }}\n            sx={{\n              // backgroundColor: \"background.default\",\n              minHeight: \"100%\",\n              py: 3,\n            }}\n          >\n            <Container maxWidth={false}>\n              <Grid container spacing={3}>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                  <CityCard city={this.state.data} />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                  <TemperatureCard data={this.state.data} />\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                  <WeatherCard data={this.state.data}/>\n                </Grid>\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\n                  <WindCard data={this.state.data} />\n                </Grid>\n                \n                <Grid item lg={4} md={6} xl={3} xs={12}>\n                  <CloudCondition sx={{ height: \"100%\" }} data={this.state.data} />\n                </Grid>\n                <Grid item lg={8} md={12} xl={9} xs={12}>\n                  <NextDaysData data={this.state.data} />\n                </Grid>\n                {/* <Grid item lg={8} md={12} xl={9} xs={12}>\n                  <LinesChart data={this.state.data}/>\n                </Grid> */}\n              </Grid>\n            </Container>\n          </Box>:\n          console.log()}\n        </div>\n        <div style={{ \n  backgroundImage: `url(${process.env.PUBLIC_URL + '/2.jpg'})`,\n}} />\n    \n      \n      </>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Dashboard);\n","// import Routes from \"./Routes\"\nimport './App.css';\nimport Dashboard from \"./components/Dashboard/pages/Dashboard\";\n\nfunction App() {\n  return (\n    <Dashboard/>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\n"],"sourceRoot":""}